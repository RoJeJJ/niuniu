package com.ruidi.utils;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Random;

public class PokerUtil {
    public static final Byte[] POKERS_JOKER = new Byte[]{
            0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0A,0x0B,0x0C,0x0D,
            0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1A,0x1B,0x1C,0x1D,
            0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,0x2A,0x2B,0x2C,0x2D,
            0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3A,0x3B,0x3C,0x3D,
            0x40,
            0x50
    };
    public static final Byte[] POKERS = new Byte[]{
            0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0A,0x0B,0x0C,0x0D,
            0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1A,0x1B,0x1C,0x1D,
            0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,0x2A,0x2B,0x2C,0x2D,
            0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3A,0x3B,0x3C,0x3D,
    };
    public static byte getPokerColor(byte poker){
        return (byte) (poker>>4);
    }
    public static byte getPokerFace(byte poker){
        return (byte) (poker&0x0F);
    }
    public static byte generateSingleCard(byte color, byte face){
        return (byte) ((color << 4)+face);
    }
    public static int getPokerValue(byte poker){
        return  (poker&0x0F) > 10 ? 10:poker&0x0F;
    }
    //生成洗好的一副牌
    public static List<Byte> generateSuitCard(boolean joker){
        List<Byte> pokers;
        if (joker){
            pokers = new ArrayList<>(Arrays.asList(POKERS_JOKER));
        }else
            pokers = new ArrayList<>(Arrays.asList(POKERS));
        Random random = new Random();
        for (int i=0;i<pokers.size();i++){
            byte card = pokers.get(i);
            int index = random.nextInt(pokers.size());
            pokers.set(i,pokers.get(index));
            pokers.set(index,card);
        }
        return pokers;
    }
}
